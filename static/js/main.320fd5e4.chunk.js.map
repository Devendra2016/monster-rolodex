{"version":3,"sources":["logo.svg","compoents/Card/Card.jsx","compoents/CardlList/CardList.jsx","compoents/Search-Box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","clcassName","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","event","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAAe,I,kBCWAA,EATH,SAACC,GAET,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAChB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCIVC,G,KATC,SAACR,GACb,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCIhBM,G,MATG,SAAC,GAClB,IADmBC,EACpB,EADoBA,YAAYC,EAChC,EADgCA,aAE5B,OACA,qBAAKC,WAAW,SAAhB,SACI,uBAAOC,KAAK,SAAUH,YAAaA,EACnCI,SAAUH,QCgCHI,E,kDA/Bb,aACC,IAAD,8BACE,gBACKC,MAAO,CACZT,SAAS,GACTU,YAAY,IAJd,E,qDAOA,WACC,IAAD,OACEC,MAZM,8CAaLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAAChB,SAASe,OACpCE,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,Q,oBAE1B,WAAS,IAAD,SACyBG,KAAKZ,MAA7BT,EADD,EACCA,SAAWU,EADZ,EACYA,YACZY,EAAiBtB,EAASuB,QAAO,SAAA5B,GAAO,OAAEA,EAAQE,KAAK2B,cAC5DC,SAASf,EAAYc,kBAEtB,OACE,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAYY,aAAc,SAAAsB,GAAK,OAAE,EAAKV,SAAS,CAACN,YAAYgB,EAAMC,OAAOC,SACxEzB,YAAY,cACb,cAAC,EAAD,CAAUH,SAAUsB,W,GA1BVO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.320fd5e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './Card.css'\r\nconst Card =(props)=>\r\n{\r\n    return(\r\n    <div className='card-container'>\r\n        <img alt='' src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`}/>\r\n       <h1> {props.monster.name}</h1>\r\n       <p>{props.monster.email}</p>\r\n    </div>)\r\n}\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './card-list.css'\r\nconst CardList =(props)=> {\r\n    return(\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster=>\r\n            <Card key={monster.id} monster={monster}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport './SearchBox.css';\r\nconst SearchBox = ({placeholder,handleChange}) =>\r\n{\r\n    return(\r\n    <div clcassName='search'>\r\n        <input type='search'  placeholder={placeholder}\r\n        onChange={handleChange }/>\r\n    </div>);\r\n}\r\n\r\nexport default SearchBox;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport react, { Component } from 'react';\nimport CardList from './compoents/CardlList/CardList'\nimport './compoents/CardlList/card-list.css';\nimport SearchBox from './compoents/Search-Box/SearchBox';\nconst url='https://jsonplaceholder.typicode.com/users'\nclass App extends Component {\n  constructor()\n  {\n    super();\n    this.state ={\n    monsters:[],\n    searchField:''\n                }\n  }\n  componentDidMount()\n  {\n    fetch(url)\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n    .catch(err=>console.log(err))\n  }\n  render(){\n    const {monsters , searchField}=this.state;\n    const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase()\n    .includes(searchField.toLowerCase()));\n\n    return(\n      <div className='App'>\n        <h1>Monstor Rolodex</h1>\n        <SearchBox  handleChange={event=>this.setState({searchField:event.target.value})}\n         placeholder='SearchBox'/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}